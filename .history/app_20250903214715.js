const ENDPOINT='https://script.google.com/macros/s/AKfycbw7O12TTWqHzWTNdopBV-RHKCu18KjBd9JmIN1t2oXtzY8auCrAv2UdgyZy9JalK7V_Hg/exec';const CSV_URL='data/patients.csv';
const LS_KEY_INDEX='cer_current_index',LS_KEY_SUBMITTED='cer_submitted_ids';let patients=[],idx=0,submittedIds={};
function $(s){return document.querySelector(s)}function $all(s){return[...document.querySelectorAll(s)]}
function loadLocalState(){const i=localStorage.getItem(LS_KEY_INDEX);idx=i?parseInt(i,10):0;const raw=localStorage.getItem(LS_KEY_SUBMITTED);submittedIds=raw?JSON.parse(raw):{}}
function saveLocalState(){localStorage.setItem(LS_KEY_INDEX,''+idx);localStorage.setItem(LS_KEY_SUBMITTED,JSON.stringify(submittedIds))}
async function loadCSV(){const r=await fetch(CSV_URL,{cache:'no-store'});const t=await r.text();return parseCSV(t)}
function parseCSV(text){const lines=text.split(/\r?\n/).filter(l=>l.trim().length);const header=lines[0].split(',');const rows=lines.slice(1).map((line,i)=>{const cells=[];let cur='',inQ=false;for(let ch of line){if(ch=='\"')inQ=!inQ;else if(ch==','&&!inQ){cells.push(cur);cur=''}else cur+=ch}cells.push(cur);const obj={};header.forEach((h,j)=>obj[h.trim()]=(cells[j]??'').replace(/^\"|\"$/g,''));obj.__row_index=i;return obj});return{header,rows}}
function expertColumnIndexes(header){const n=header.length;return[n-3,n-2,n-1]}
function patientKey(p){return p.patient_id||p.Patient_ID||p.id||p.ID||null}
function renderPatient(){if(idx<0)idx=0;if(idx>=patients.length)idx=patients.length-1;const p=patients[idx];$('#position').textContent=`Patient ${idx+1} of ${patients.length}`;$('#patientTitle').textContent=patientKey(p)?`Patient ${patientKey(p)}`:`Patient ${idx+1}`;const header=patients.meta.header;const[cA,cB,cC]=expertColumnIndexes(header);const hide=new Set([header[cA],header[cB],header[cC]]);const table=document.createElement('table');table.id='patientTable';for(const k of header){if(hide.has(k))continue;const tr=document.createElement('tr');const th=document.createElement('th');th.textContent=k;const td=document.createElement('td');td.textContent=p[k];tr.append(th,td);table.appendChild(tr)}const wrap=$('#patientTableWrap');wrap.innerHTML='';wrap.appendChild(table);const key=(patientKey(p)??String(idx));const was=!!submittedIds[key];$('#allowResubmit').checked=false;$('#saveSubmitBtn').disabled=was;$('#status').textContent=was?'Already submitted from this browser. Check “Allow re‑submit” to send again.':'';$('#status').className='status';$('#outcome').value='';$all('input[name=\"confidence\"]').forEach(r=>r.checked=false);$('#snotSlider').value=55;$('#snotValue').textContent='55'}
async function submitAndNext(){if(ENDPOINT.startsWith('REPLACE_')){flash('Endpoint not configured. Ask the admin.',true);return}const p=patients[idx];const header=patients.meta.header;const[cA,cB,cC]=expertColumnIndexes(header);const outcome=$('#outcome').value;const confRadio=$all('input[name=\"confidence\"]').find(r=>r.checked);const confidence=confRadio?confRadio.value:'';const snot=$('#snotSlider').value;if(!outcome||!confidence){flash('Please select outcome and confidence.',true);return}const key=(patientKey(p)??String(idx));if(submittedIds[key]&&!$('#allowResubmit').checked){flash('Already submitted from this browser. Enable “Allow re‑submit” to send again.',true);return}const payload={_meta:{ts:Date.now()},csv_last3_indexes:[cA,cB,cC],patient_index:p.__row_index,patient_key:patientKey(p),answers:{col1:outcome,col2:confidence,col3:Number(snot)},header:header};try{$('#saveSubmitBtn').disabled=true;const resp=await fetch(ENDPOINT,{method:'POST',mode:'cors',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});const text=await resp.text();if(!resp.ok)throw new Error(text||`HTTP ${resp.status}`);submittedIds[key]=true;saveLocalState();flash('Saved!',false);idx=Math.min(idx+1,patients.length-1);saveLocalState();renderPatient()}catch(err){console.error(err);flash('Error: '+err.message,true)}finally{$('#saveSubmitBtn').disabled=false}}
function flash(msg,isErr){const el=$('#status');el.textContent=msg;el.className='status '+(isErr?'err':'ok')}
async function main(){loadLocalState();$('#prevBtn').addEventListener('click',()=>{idx=Math.max(0,idx-1);saveLocalState();renderPatient()});$('#nextBtn').addEventListener('click',()=>{idx=Math.min(patients.length-1,idx+1);saveLocalState();renderPatient()});$('#saveSubmitBtn').addEventListener('click',submitAndNext);$('#snotSlider').addEventListener('input',e=>$('#snotValue').textContent=e.target.value);const parsed=await loadCSV();patients=parsed.rows;patients.meta={header:parsed.header};renderPatient()}main();